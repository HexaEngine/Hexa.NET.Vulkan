// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Vulkan
{
	public static unsafe partial class Vulkan
	{
		public const uint VK_MAX_PHYSICAL_DEVICE_NAME_SIZE = unchecked((uint)256);

		public const uint VK_UUID_SIZE = unchecked((uint)16);

		public const uint VK_LUID_SIZE = unchecked((uint)8);

		public const uint VK_MAX_EXTENSION_NAME_SIZE = unchecked((uint)256);

		public const uint VK_MAX_DESCRIPTION_SIZE = unchecked((uint)256);

		public const uint VK_MAX_MEMORY_TYPES = unchecked((uint)32);

		public const uint VK_MAX_MEMORY_HEAPS = unchecked((uint)16);

		public const uint VK_REMAINING_MIP_LEVELS = unchecked((uint)(~0U));

		public const uint VK_REMAINING_ARRAY_LAYERS = unchecked((uint)(~0U));

		public const uint VK_REMAINING_3D_SLICES_EXT = unchecked((uint)(~0U));

		public const uint VK_ATTACHMENT_UNUSED = unchecked((uint)(~0U));

		public const uint VK_TRUE = unchecked((uint)1);

		public const uint VK_FALSE = unchecked((uint)0);

		public const uint VK_QUEUE_FAMILY_IGNORED = unchecked((uint)(~0U));

		public const uint VK_QUEUE_FAMILY_EXTERNAL = unchecked((uint)(~1U));

		public const uint VK_QUEUE_FAMILY_FOREIGN_EXT = unchecked((uint)(~2U));

		public const uint VK_SUBPASS_EXTERNAL = unchecked((uint)(~0U));

		public const uint VK_MAX_DEVICE_GROUP_SIZE = unchecked((uint)32);

		public const uint VK_MAX_DRIVER_NAME_SIZE = unchecked((uint)256);

		public const uint VK_MAX_DRIVER_INFO_SIZE = unchecked((uint)256);

		public const uint VK_SHADER_UNUSED_KHR = unchecked((uint)(~0U));

		public const uint VK_MAX_GLOBAL_PRIORITY_SIZE = unchecked((uint)16);

		public const uint VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT = unchecked((uint)32);

		public const uint VK_MAX_PIPELINE_BINARY_KEY_SIZE_KHR = unchecked((uint)32);

		public const uint VK_MAX_VIDEO_AV1_REFERENCES_PER_FRAME_KHR = unchecked((uint)7);

		public const uint VK_SHADER_INDEX_UNUSED_AMDX = unchecked((uint)(~0U));

	}
}
