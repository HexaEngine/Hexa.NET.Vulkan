// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Vulkan
{
	/// <summary>
	/// Vulkan format definitions<br/>
	/// </summary>
	public enum VkFormat : uint
	{
		/// <remarks></remarks>
		Undefined = unchecked((uint)0),

		/// <remarks></remarks>
		R4G4UnormPack8 = unchecked((uint)1),

		/// <remarks></remarks>
		R4G4B4A4UnormPack16 = unchecked((uint)2),

		/// <remarks></remarks>
		B4G4R4A4UnormPack16 = unchecked((uint)3),

		/// <remarks></remarks>
		R5G6B5UnormPack16 = unchecked((uint)4),

		/// <remarks></remarks>
		B5G6R5UnormPack16 = unchecked((uint)5),

		/// <remarks></remarks>
		R5G5B5A1UnormPack16 = unchecked((uint)6),

		/// <remarks></remarks>
		B5G5R5A1UnormPack16 = unchecked((uint)7),

		/// <remarks></remarks>
		A1R5G5B5UnormPack16 = unchecked((uint)8),

		/// <remarks></remarks>
		R8Unorm = unchecked((uint)9),

		/// <remarks></remarks>
		R8Snorm = unchecked((uint)10),

		/// <remarks></remarks>
		R8Uscaled = unchecked((uint)11),

		/// <remarks></remarks>
		R8Sscaled = unchecked((uint)12),

		/// <remarks></remarks>
		R8Uint = unchecked((uint)13),

		/// <remarks></remarks>
		R8Sint = unchecked((uint)14),

		/// <remarks></remarks>
		R8Srgb = unchecked((uint)15),

		/// <remarks></remarks>
		R8G8Unorm = unchecked((uint)16),

		/// <remarks></remarks>
		R8G8Snorm = unchecked((uint)17),

		/// <remarks></remarks>
		R8G8Uscaled = unchecked((uint)18),

		/// <remarks></remarks>
		R8G8Sscaled = unchecked((uint)19),

		/// <remarks></remarks>
		R8G8Uint = unchecked((uint)20),

		/// <remarks></remarks>
		R8G8Sint = unchecked((uint)21),

		/// <remarks></remarks>
		R8G8Srgb = unchecked((uint)22),

		/// <remarks></remarks>
		R8G8B8Unorm = unchecked((uint)23),

		/// <remarks></remarks>
		R8G8B8Snorm = unchecked((uint)24),

		/// <remarks></remarks>
		R8G8B8Uscaled = unchecked((uint)25),

		/// <remarks></remarks>
		R8G8B8Sscaled = unchecked((uint)26),

		/// <remarks></remarks>
		R8G8B8Uint = unchecked((uint)27),

		/// <remarks></remarks>
		R8G8B8Sint = unchecked((uint)28),

		/// <remarks></remarks>
		R8G8B8Srgb = unchecked((uint)29),

		/// <remarks></remarks>
		B8G8R8Unorm = unchecked((uint)30),

		/// <remarks></remarks>
		B8G8R8Snorm = unchecked((uint)31),

		/// <remarks></remarks>
		B8G8R8Uscaled = unchecked((uint)32),

		/// <remarks></remarks>
		B8G8R8Sscaled = unchecked((uint)33),

		/// <remarks></remarks>
		B8G8R8Uint = unchecked((uint)34),

		/// <remarks></remarks>
		B8G8R8Sint = unchecked((uint)35),

		/// <remarks></remarks>
		B8G8R8Srgb = unchecked((uint)36),

		/// <remarks></remarks>
		R8G8B8A8Unorm = unchecked((uint)37),

		/// <remarks></remarks>
		R8G8B8A8Snorm = unchecked((uint)38),

		/// <remarks></remarks>
		R8G8B8A8Uscaled = unchecked((uint)39),

		/// <remarks></remarks>
		R8G8B8A8Sscaled = unchecked((uint)40),

		/// <remarks></remarks>
		R8G8B8A8Uint = unchecked((uint)41),

		/// <remarks></remarks>
		R8G8B8A8Sint = unchecked((uint)42),

		/// <remarks></remarks>
		R8G8B8A8Srgb = unchecked((uint)43),

		/// <remarks></remarks>
		B8G8R8A8Unorm = unchecked((uint)44),

		/// <remarks></remarks>
		B8G8R8A8Snorm = unchecked((uint)45),

		/// <remarks></remarks>
		B8G8R8A8Uscaled = unchecked((uint)46),

		/// <remarks></remarks>
		B8G8R8A8Sscaled = unchecked((uint)47),

		/// <remarks></remarks>
		B8G8R8A8Uint = unchecked((uint)48),

		/// <remarks></remarks>
		B8G8R8A8Sint = unchecked((uint)49),

		/// <remarks></remarks>
		B8G8R8A8Srgb = unchecked((uint)50),

		/// <remarks></remarks>
		A8B8G8R8UnormPack32 = unchecked((uint)51),

		/// <remarks></remarks>
		A8B8G8R8SnormPack32 = unchecked((uint)52),

		/// <remarks></remarks>
		A8B8G8R8UscaledPack32 = unchecked((uint)53),

		/// <remarks></remarks>
		A8B8G8R8SscaledPack32 = unchecked((uint)54),

		/// <remarks></remarks>
		A8B8G8R8UintPack32 = unchecked((uint)55),

		/// <remarks></remarks>
		A8B8G8R8SintPack32 = unchecked((uint)56),

		/// <remarks></remarks>
		A8B8G8R8SrgbPack32 = unchecked((uint)57),

		/// <remarks></remarks>
		A2R10G10B10UnormPack32 = unchecked((uint)58),

		/// <remarks></remarks>
		A2R10G10B10SnormPack32 = unchecked((uint)59),

		/// <remarks></remarks>
		A2R10G10B10UscaledPack32 = unchecked((uint)60),

		/// <remarks></remarks>
		A2R10G10B10SscaledPack32 = unchecked((uint)61),

		/// <remarks></remarks>
		A2R10G10B10UintPack32 = unchecked((uint)62),

		/// <remarks></remarks>
		A2R10G10B10SintPack32 = unchecked((uint)63),

		/// <remarks></remarks>
		A2B10G10R10UnormPack32 = unchecked((uint)64),

		/// <remarks></remarks>
		A2B10G10R10SnormPack32 = unchecked((uint)65),

		/// <remarks></remarks>
		A2B10G10R10UscaledPack32 = unchecked((uint)66),

		/// <remarks></remarks>
		A2B10G10R10SscaledPack32 = unchecked((uint)67),

		/// <remarks></remarks>
		A2B10G10R10UintPack32 = unchecked((uint)68),

		/// <remarks></remarks>
		A2B10G10R10SintPack32 = unchecked((uint)69),

		/// <remarks></remarks>
		R16Unorm = unchecked((uint)70),

		/// <remarks></remarks>
		R16Snorm = unchecked((uint)71),

		/// <remarks></remarks>
		R16Uscaled = unchecked((uint)72),

		/// <remarks></remarks>
		R16Sscaled = unchecked((uint)73),

		/// <remarks></remarks>
		R16Uint = unchecked((uint)74),

		/// <remarks></remarks>
		R16Sint = unchecked((uint)75),

		/// <remarks></remarks>
		R16Sfloat = unchecked((uint)76),

		/// <remarks></remarks>
		R16G16Unorm = unchecked((uint)77),

		/// <remarks></remarks>
		R16G16Snorm = unchecked((uint)78),

		/// <remarks></remarks>
		R16G16Uscaled = unchecked((uint)79),

		/// <remarks></remarks>
		R16G16Sscaled = unchecked((uint)80),

		/// <remarks></remarks>
		R16G16Uint = unchecked((uint)81),

		/// <remarks></remarks>
		R16G16Sint = unchecked((uint)82),

		/// <remarks></remarks>
		R16G16Sfloat = unchecked((uint)83),

		/// <remarks></remarks>
		R16G16B16Unorm = unchecked((uint)84),

		/// <remarks></remarks>
		R16G16B16Snorm = unchecked((uint)85),

		/// <remarks></remarks>
		R16G16B16Uscaled = unchecked((uint)86),

		/// <remarks></remarks>
		R16G16B16Sscaled = unchecked((uint)87),

		/// <remarks></remarks>
		R16G16B16Uint = unchecked((uint)88),

		/// <remarks></remarks>
		R16G16B16Sint = unchecked((uint)89),

		/// <remarks></remarks>
		R16G16B16Sfloat = unchecked((uint)90),

		/// <remarks></remarks>
		R16G16B16A16Unorm = unchecked((uint)91),

		/// <remarks></remarks>
		R16G16B16A16Snorm = unchecked((uint)92),

		/// <remarks></remarks>
		R16G16B16A16Uscaled = unchecked((uint)93),

		/// <remarks></remarks>
		R16G16B16A16Sscaled = unchecked((uint)94),

		/// <remarks></remarks>
		R16G16B16A16Uint = unchecked((uint)95),

		/// <remarks></remarks>
		R16G16B16A16Sint = unchecked((uint)96),

		/// <remarks></remarks>
		R16G16B16A16Sfloat = unchecked((uint)97),

		/// <remarks></remarks>
		R32Uint = unchecked((uint)98),

		/// <remarks></remarks>
		R32Sint = unchecked((uint)99),

		/// <remarks></remarks>
		R32Sfloat = unchecked((uint)100),

		/// <remarks></remarks>
		R32G32Uint = unchecked((uint)101),

		/// <remarks></remarks>
		R32G32Sint = unchecked((uint)102),

		/// <remarks></remarks>
		R32G32Sfloat = unchecked((uint)103),

		/// <remarks></remarks>
		R32G32B32Uint = unchecked((uint)104),

		/// <remarks></remarks>
		R32G32B32Sint = unchecked((uint)105),

		/// <remarks></remarks>
		R32G32B32Sfloat = unchecked((uint)106),

		/// <remarks></remarks>
		R32G32B32A32Uint = unchecked((uint)107),

		/// <remarks></remarks>
		R32G32B32A32Sint = unchecked((uint)108),

		/// <remarks></remarks>
		R32G32B32A32Sfloat = unchecked((uint)109),

		/// <remarks></remarks>
		R64Uint = unchecked((uint)110),

		/// <remarks></remarks>
		R64Sint = unchecked((uint)111),

		/// <remarks></remarks>
		R64Sfloat = unchecked((uint)112),

		/// <remarks></remarks>
		R64G64Uint = unchecked((uint)113),

		/// <remarks></remarks>
		R64G64Sint = unchecked((uint)114),

		/// <remarks></remarks>
		R64G64Sfloat = unchecked((uint)115),

		/// <remarks></remarks>
		R64G64B64Uint = unchecked((uint)116),

		/// <remarks></remarks>
		R64G64B64Sint = unchecked((uint)117),

		/// <remarks></remarks>
		R64G64B64Sfloat = unchecked((uint)118),

		/// <remarks></remarks>
		R64G64B64A64Uint = unchecked((uint)119),

		/// <remarks></remarks>
		R64G64B64A64Sint = unchecked((uint)120),

		/// <remarks></remarks>
		R64G64B64A64Sfloat = unchecked((uint)121),

		/// <remarks></remarks>
		B10G11R11UfloatPack32 = unchecked((uint)122),

		/// <remarks></remarks>
		E5B9G9R9UfloatPack32 = unchecked((uint)123),

		/// <remarks></remarks>
		D16Unorm = unchecked((uint)124),

		/// <remarks></remarks>
		X8D24UnormPack32 = unchecked((uint)125),

		/// <remarks></remarks>
		D32Sfloat = unchecked((uint)126),

		/// <remarks></remarks>
		S8Uint = unchecked((uint)127),

		/// <remarks></remarks>
		D16UnormS8Uint = unchecked((uint)128),

		/// <remarks></remarks>
		D24UnormS8Uint = unchecked((uint)129),

		/// <remarks></remarks>
		D32SfloatS8Uint = unchecked((uint)130),

		/// <remarks></remarks>
		Bc1RgbUnormBlock = unchecked((uint)131),

		/// <remarks></remarks>
		Bc1RgbSrgbBlock = unchecked((uint)132),

		/// <remarks></remarks>
		Bc1RgbaUnormBlock = unchecked((uint)133),

		/// <remarks></remarks>
		Bc1RgbaSrgbBlock = unchecked((uint)134),

		/// <remarks></remarks>
		Bc2UnormBlock = unchecked((uint)135),

		/// <remarks></remarks>
		Bc2SrgbBlock = unchecked((uint)136),

		/// <remarks></remarks>
		Bc3UnormBlock = unchecked((uint)137),

		/// <remarks></remarks>
		Bc3SrgbBlock = unchecked((uint)138),

		/// <remarks></remarks>
		Bc4UnormBlock = unchecked((uint)139),

		/// <remarks></remarks>
		Bc4SnormBlock = unchecked((uint)140),

		/// <remarks></remarks>
		Bc5UnormBlock = unchecked((uint)141),

		/// <remarks></remarks>
		Bc5SnormBlock = unchecked((uint)142),

		/// <remarks></remarks>
		Bc6HUfloatBlock = unchecked((uint)143),

		/// <remarks></remarks>
		Bc6HSfloatBlock = unchecked((uint)144),

		/// <remarks></remarks>
		Bc7UnormBlock = unchecked((uint)145),

		/// <remarks></remarks>
		Bc7SrgbBlock = unchecked((uint)146),

		/// <remarks></remarks>
		Etc2R8G8B8UnormBlock = unchecked((uint)147),

		/// <remarks></remarks>
		Etc2R8G8B8SrgbBlock = unchecked((uint)148),

		/// <remarks></remarks>
		Etc2R8G8B8A1UnormBlock = unchecked((uint)149),

		/// <remarks></remarks>
		Etc2R8G8B8A1SrgbBlock = unchecked((uint)150),

		/// <remarks></remarks>
		Etc2R8G8B8A8UnormBlock = unchecked((uint)151),

		/// <remarks></remarks>
		Etc2R8G8B8A8SrgbBlock = unchecked((uint)152),

		/// <remarks></remarks>
		EacR11UnormBlock = unchecked((uint)153),

		/// <remarks></remarks>
		EacR11SnormBlock = unchecked((uint)154),

		/// <remarks></remarks>
		EacR11G11UnormBlock = unchecked((uint)155),

		/// <remarks></remarks>
		EacR11G11SnormBlock = unchecked((uint)156),

		/// <remarks></remarks>
		Astc4X4UnormBlock = unchecked((uint)157),

		/// <remarks></remarks>
		Astc4X4SrgbBlock = unchecked((uint)158),

		/// <remarks></remarks>
		Astc5X4UnormBlock = unchecked((uint)159),

		/// <remarks></remarks>
		Astc5X4SrgbBlock = unchecked((uint)160),

		/// <remarks></remarks>
		Astc5X5UnormBlock = unchecked((uint)161),

		/// <remarks></remarks>
		Astc5X5SrgbBlock = unchecked((uint)162),

		/// <remarks></remarks>
		Astc6X5UnormBlock = unchecked((uint)163),

		/// <remarks></remarks>
		Astc6X5SrgbBlock = unchecked((uint)164),

		/// <remarks></remarks>
		Astc6X6UnormBlock = unchecked((uint)165),

		/// <remarks></remarks>
		Astc6X6SrgbBlock = unchecked((uint)166),

		/// <remarks></remarks>
		Astc8X5UnormBlock = unchecked((uint)167),

		/// <remarks></remarks>
		Astc8X5SrgbBlock = unchecked((uint)168),

		/// <remarks></remarks>
		Astc8X6UnormBlock = unchecked((uint)169),

		/// <remarks></remarks>
		Astc8X6SrgbBlock = unchecked((uint)170),

		/// <remarks></remarks>
		Astc8X8UnormBlock = unchecked((uint)171),

		/// <remarks></remarks>
		Astc8X8SrgbBlock = unchecked((uint)172),

		/// <remarks></remarks>
		Astc10X5UnormBlock = unchecked((uint)173),

		/// <remarks></remarks>
		Astc10X5SrgbBlock = unchecked((uint)174),

		/// <remarks></remarks>
		Astc10X6UnormBlock = unchecked((uint)175),

		/// <remarks></remarks>
		Astc10X6SrgbBlock = unchecked((uint)176),

		/// <remarks></remarks>
		Astc10X8UnormBlock = unchecked((uint)177),

		/// <remarks></remarks>
		Astc10X8SrgbBlock = unchecked((uint)178),

		/// <remarks></remarks>
		Astc10X10UnormBlock = unchecked((uint)179),

		/// <remarks></remarks>
		Astc10X10SrgbBlock = unchecked((uint)180),

		/// <remarks></remarks>
		Astc12X10UnormBlock = unchecked((uint)181),

		/// <remarks></remarks>
		Astc12X10SrgbBlock = unchecked((uint)182),

		/// <remarks></remarks>
		Astc12X12UnormBlock = unchecked((uint)183),

		/// <remarks></remarks>
		Astc12X12SrgbBlock = unchecked((uint)184),
	}
}
