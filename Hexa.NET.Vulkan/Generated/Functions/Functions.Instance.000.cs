// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.Vulkan
{
	public unsafe partial class Instance
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal VkResult EnumeratePhysicalDevicesNative(VkInstance instance, uint* pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<VkInstance, uint*, VkPhysicalDevice*, VkResult>)funcTable[0])(instance, pPhysicalDeviceCount, pPhysicalDevices);
			#else
			return (VkResult)((delegate* unmanaged[Cdecl]<VkInstance, nint, nint, VkResult>)funcTable[0])(instance, (nint)pPhysicalDeviceCount, (nint)pPhysicalDevices);
			#endif
		}

		public VkResult EnumeratePhysicalDevices(VkInstance instance, uint* pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices)
		{
			VkResult ret = EnumeratePhysicalDevicesNative(instance, pPhysicalDeviceCount, pPhysicalDevices);
			return ret;
		}

		public VkResult EnumeratePhysicalDevices(VkInstance instance, Span<uint> pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices)
		{
			fixed (uint* ppPhysicalDeviceCount0 = pPhysicalDeviceCount)
			{
				VkResult ret = EnumeratePhysicalDevicesNative(instance, ppPhysicalDeviceCount0, pPhysicalDevices);
				return ret;
			}
		}

		public VkResult EnumeratePhysicalDevices(VkInstance instance, ref uint pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices)
		{
			fixed (uint* ppPhysicalDeviceCount0 = &pPhysicalDeviceCount)
			{
				VkResult ret = EnumeratePhysicalDevicesNative(instance, ppPhysicalDeviceCount0, pPhysicalDevices);
				return ret;
			}
		}

		public VkResult EnumeratePhysicalDevices(VkInstance instance, uint* pPhysicalDeviceCount, Span<VkPhysicalDevice> pPhysicalDevices)
		{
			fixed (VkPhysicalDevice* ppPhysicalDevices0 = pPhysicalDevices)
			{
				VkResult ret = EnumeratePhysicalDevicesNative(instance, pPhysicalDeviceCount, ppPhysicalDevices0);
				return ret;
			}
		}

		public VkResult EnumeratePhysicalDevices(VkInstance instance, uint* pPhysicalDeviceCount, ref VkPhysicalDevice pPhysicalDevices)
		{
			fixed (VkPhysicalDevice* ppPhysicalDevices0 = &pPhysicalDevices)
			{
				VkResult ret = EnumeratePhysicalDevicesNative(instance, pPhysicalDeviceCount, ppPhysicalDevices0);
				return ret;
			}
		}

		public VkResult EnumeratePhysicalDevices(VkInstance instance, Span<uint> pPhysicalDeviceCount, Span<VkPhysicalDevice> pPhysicalDevices)
		{
			fixed (uint* ppPhysicalDeviceCount0 = pPhysicalDeviceCount)
			{
				fixed (VkPhysicalDevice* ppPhysicalDevices1 = pPhysicalDevices)
				{
					VkResult ret = EnumeratePhysicalDevicesNative(instance, ppPhysicalDeviceCount0, ppPhysicalDevices1);
					return ret;
				}
			}
		}

		public VkResult EnumeratePhysicalDevices(VkInstance instance, ref uint pPhysicalDeviceCount, ref VkPhysicalDevice pPhysicalDevices)
		{
			fixed (uint* ppPhysicalDeviceCount0 = &pPhysicalDeviceCount)
			{
				fixed (VkPhysicalDevice* ppPhysicalDevices1 = &pPhysicalDevices)
				{
					VkResult ret = EnumeratePhysicalDevicesNative(instance, ppPhysicalDeviceCount0, ppPhysicalDevices1);
					return ret;
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDevicePropertiesNative(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties* pProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceProperties*, void>)funcTable[1])(physicalDevice, pProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, void>)funcTable[1])(physicalDevice, (nint)pProperties);
			#endif
		}

		public void GetPhysicalDeviceProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties* pProperties)
		{
			GetPhysicalDevicePropertiesNative(physicalDevice, pProperties);
		}

		public void GetPhysicalDeviceProperties(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceProperties> pProperties)
		{
			fixed (VkPhysicalDeviceProperties* ppProperties0 = pProperties)
			{
				GetPhysicalDevicePropertiesNative(physicalDevice, ppProperties0);
			}
		}

		public void GetPhysicalDeviceProperties(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceProperties pProperties)
		{
			fixed (VkPhysicalDeviceProperties* ppProperties0 = &pProperties)
			{
				GetPhysicalDevicePropertiesNative(physicalDevice, ppProperties0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceQueueFamilyPropertiesNative(VkPhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, VkQueueFamilyProperties* pQueueFamilyProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, uint*, VkQueueFamilyProperties*, void>)funcTable[2])(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, void>)funcTable[2])(physicalDevice, (nint)pQueueFamilyPropertyCount, (nint)pQueueFamilyProperties);
			#endif
		}

		public void GetPhysicalDeviceQueueFamilyProperties(VkPhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, VkQueueFamilyProperties* pQueueFamilyProperties)
		{
			GetPhysicalDeviceQueueFamilyPropertiesNative(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties);
		}

		public void GetPhysicalDeviceQueueFamilyProperties(VkPhysicalDevice physicalDevice, Span<uint> pQueueFamilyPropertyCount, VkQueueFamilyProperties* pQueueFamilyProperties)
		{
			fixed (uint* ppQueueFamilyPropertyCount0 = pQueueFamilyPropertyCount)
			{
				GetPhysicalDeviceQueueFamilyPropertiesNative(physicalDevice, ppQueueFamilyPropertyCount0, pQueueFamilyProperties);
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties(VkPhysicalDevice physicalDevice, ref uint pQueueFamilyPropertyCount, VkQueueFamilyProperties* pQueueFamilyProperties)
		{
			fixed (uint* ppQueueFamilyPropertyCount0 = &pQueueFamilyPropertyCount)
			{
				GetPhysicalDeviceQueueFamilyPropertiesNative(physicalDevice, ppQueueFamilyPropertyCount0, pQueueFamilyProperties);
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties(VkPhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, Span<VkQueueFamilyProperties> pQueueFamilyProperties)
		{
			fixed (VkQueueFamilyProperties* ppQueueFamilyProperties0 = pQueueFamilyProperties)
			{
				GetPhysicalDeviceQueueFamilyPropertiesNative(physicalDevice, pQueueFamilyPropertyCount, ppQueueFamilyProperties0);
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties(VkPhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, ref VkQueueFamilyProperties pQueueFamilyProperties)
		{
			fixed (VkQueueFamilyProperties* ppQueueFamilyProperties0 = &pQueueFamilyProperties)
			{
				GetPhysicalDeviceQueueFamilyPropertiesNative(physicalDevice, pQueueFamilyPropertyCount, ppQueueFamilyProperties0);
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties(VkPhysicalDevice physicalDevice, Span<uint> pQueueFamilyPropertyCount, Span<VkQueueFamilyProperties> pQueueFamilyProperties)
		{
			fixed (uint* ppQueueFamilyPropertyCount0 = pQueueFamilyPropertyCount)
			{
				fixed (VkQueueFamilyProperties* ppQueueFamilyProperties1 = pQueueFamilyProperties)
				{
					GetPhysicalDeviceQueueFamilyPropertiesNative(physicalDevice, ppQueueFamilyPropertyCount0, ppQueueFamilyProperties1);
				}
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties(VkPhysicalDevice physicalDevice, ref uint pQueueFamilyPropertyCount, ref VkQueueFamilyProperties pQueueFamilyProperties)
		{
			fixed (uint* ppQueueFamilyPropertyCount0 = &pQueueFamilyPropertyCount)
			{
				fixed (VkQueueFamilyProperties* ppQueueFamilyProperties1 = &pQueueFamilyProperties)
				{
					GetPhysicalDeviceQueueFamilyPropertiesNative(physicalDevice, ppQueueFamilyPropertyCount0, ppQueueFamilyProperties1);
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceMemoryPropertiesNative(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties* pMemoryProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceMemoryProperties*, void>)funcTable[3])(physicalDevice, pMemoryProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, void>)funcTable[3])(physicalDevice, (nint)pMemoryProperties);
			#endif
		}

		public void GetPhysicalDeviceMemoryProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties* pMemoryProperties)
		{
			GetPhysicalDeviceMemoryPropertiesNative(physicalDevice, pMemoryProperties);
		}

		public void GetPhysicalDeviceMemoryProperties(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceMemoryProperties> pMemoryProperties)
		{
			fixed (VkPhysicalDeviceMemoryProperties* ppMemoryProperties0 = pMemoryProperties)
			{
				GetPhysicalDeviceMemoryPropertiesNative(physicalDevice, ppMemoryProperties0);
			}
		}

		public void GetPhysicalDeviceMemoryProperties(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceMemoryProperties pMemoryProperties)
		{
			fixed (VkPhysicalDeviceMemoryProperties* ppMemoryProperties0 = &pMemoryProperties)
			{
				GetPhysicalDeviceMemoryPropertiesNative(physicalDevice, ppMemoryProperties0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceFeaturesNative(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures* pFeatures)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceFeatures*, void>)funcTable[4])(physicalDevice, pFeatures);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, void>)funcTable[4])(physicalDevice, (nint)pFeatures);
			#endif
		}

		public void GetPhysicalDeviceFeatures(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures* pFeatures)
		{
			GetPhysicalDeviceFeaturesNative(physicalDevice, pFeatures);
		}

		public void GetPhysicalDeviceFeatures(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceFeatures> pFeatures)
		{
			fixed (VkPhysicalDeviceFeatures* ppFeatures0 = pFeatures)
			{
				GetPhysicalDeviceFeaturesNative(physicalDevice, ppFeatures0);
			}
		}

		public void GetPhysicalDeviceFeatures(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceFeatures pFeatures)
		{
			fixed (VkPhysicalDeviceFeatures* ppFeatures0 = &pFeatures)
			{
				GetPhysicalDeviceFeaturesNative(physicalDevice, ppFeatures0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceFormatPropertiesNative(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties* pFormatProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkFormat, VkFormatProperties*, void>)funcTable[5])(physicalDevice, format, pFormatProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkFormat, nint, void>)funcTable[5])(physicalDevice, format, (nint)pFormatProperties);
			#endif
		}

		public void GetPhysicalDeviceFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties* pFormatProperties)
		{
			GetPhysicalDeviceFormatPropertiesNative(physicalDevice, format, pFormatProperties);
		}

		public void GetPhysicalDeviceFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, Span<VkFormatProperties> pFormatProperties)
		{
			fixed (VkFormatProperties* ppFormatProperties0 = pFormatProperties)
			{
				GetPhysicalDeviceFormatPropertiesNative(physicalDevice, format, ppFormatProperties0);
			}
		}

		public void GetPhysicalDeviceFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, ref VkFormatProperties pFormatProperties)
		{
			fixed (VkFormatProperties* ppFormatProperties0 = &pFormatProperties)
			{
				GetPhysicalDeviceFormatPropertiesNative(physicalDevice, format, ppFormatProperties0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal VkResult GetPhysicalDeviceImageFormatPropertiesNative(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkImageFormatProperties* pImageFormatProperties)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkFormat, VkImageType, VkImageTiling, VkImageUsageFlags, VkImageCreateFlags, VkImageFormatProperties*, VkResult>)funcTable[6])(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties);
			#else
			return (VkResult)((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkFormat, VkImageType, VkImageTiling, VkImageUsageFlags, VkImageCreateFlags, nint, VkResult>)funcTable[6])(physicalDevice, format, type, tiling, usage, flags, (nint)pImageFormatProperties);
			#endif
		}

		public VkResult GetPhysicalDeviceImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, VkImageFormatProperties* pImageFormatProperties)
		{
			VkResult ret = GetPhysicalDeviceImageFormatPropertiesNative(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties);
			return ret;
		}

		public VkResult GetPhysicalDeviceImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, Span<VkImageFormatProperties> pImageFormatProperties)
		{
			fixed (VkImageFormatProperties* ppImageFormatProperties0 = pImageFormatProperties)
			{
				VkResult ret = GetPhysicalDeviceImageFormatPropertiesNative(physicalDevice, format, type, tiling, usage, flags, ppImageFormatProperties0);
				return ret;
			}
		}

		public VkResult GetPhysicalDeviceImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkImageTiling tiling, VkImageUsageFlags usage, VkImageCreateFlags flags, ref VkImageFormatProperties pImageFormatProperties)
		{
			fixed (VkImageFormatProperties* ppImageFormatProperties0 = &pImageFormatProperties)
			{
				VkResult ret = GetPhysicalDeviceImageFormatPropertiesNative(physicalDevice, format, type, tiling, usage, flags, ppImageFormatProperties0);
				return ret;
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal VkResult CreateDeviceNative(VkPhysicalDevice physicalDevice, VkDeviceCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkDevice* pDevice)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkDeviceCreateInfo*, VkAllocationCallbacks*, VkDevice*, VkResult>)funcTable[7])(physicalDevice, pCreateInfo, pAllocator, pDevice);
			#else
			return (VkResult)((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, nint, VkResult>)funcTable[7])(physicalDevice, (nint)pCreateInfo, (nint)pAllocator, (nint)pDevice);
			#endif
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, VkDeviceCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, VkDevice* pDevice)
		{
			VkResult ret = CreateDeviceNative(physicalDevice, pCreateInfo, pAllocator, pDevice);
			return ret;
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, Span<VkDeviceCreateInfo> pCreateInfo, VkAllocationCallbacks* pAllocator, VkDevice* pDevice)
		{
			fixed (VkDeviceCreateInfo* ppCreateInfo0 = pCreateInfo)
			{
				VkResult ret = CreateDeviceNative(physicalDevice, ppCreateInfo0, pAllocator, pDevice);
				return ret;
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, ref VkDeviceCreateInfo pCreateInfo, VkAllocationCallbacks* pAllocator, VkDevice* pDevice)
		{
			fixed (VkDeviceCreateInfo* ppCreateInfo0 = &pCreateInfo)
			{
				VkResult ret = CreateDeviceNative(physicalDevice, ppCreateInfo0, pAllocator, pDevice);
				return ret;
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, VkDeviceCreateInfo* pCreateInfo, Span<VkAllocationCallbacks> pAllocator, VkDevice* pDevice)
		{
			fixed (VkAllocationCallbacks* ppAllocator0 = pAllocator)
			{
				VkResult ret = CreateDeviceNative(physicalDevice, pCreateInfo, ppAllocator0, pDevice);
				return ret;
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, VkDeviceCreateInfo* pCreateInfo, ref VkAllocationCallbacks pAllocator, VkDevice* pDevice)
		{
			fixed (VkAllocationCallbacks* ppAllocator0 = &pAllocator)
			{
				VkResult ret = CreateDeviceNative(physicalDevice, pCreateInfo, ppAllocator0, pDevice);
				return ret;
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, Span<VkDeviceCreateInfo> pCreateInfo, Span<VkAllocationCallbacks> pAllocator, VkDevice* pDevice)
		{
			fixed (VkDeviceCreateInfo* ppCreateInfo0 = pCreateInfo)
			{
				fixed (VkAllocationCallbacks* ppAllocator1 = pAllocator)
				{
					VkResult ret = CreateDeviceNative(physicalDevice, ppCreateInfo0, ppAllocator1, pDevice);
					return ret;
				}
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, ref VkDeviceCreateInfo pCreateInfo, ref VkAllocationCallbacks pAllocator, VkDevice* pDevice)
		{
			fixed (VkDeviceCreateInfo* ppCreateInfo0 = &pCreateInfo)
			{
				fixed (VkAllocationCallbacks* ppAllocator1 = &pAllocator)
				{
					VkResult ret = CreateDeviceNative(physicalDevice, ppCreateInfo0, ppAllocator1, pDevice);
					return ret;
				}
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, VkDeviceCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, Span<VkDevice> pDevice)
		{
			fixed (VkDevice* ppDevice0 = pDevice)
			{
				VkResult ret = CreateDeviceNative(physicalDevice, pCreateInfo, pAllocator, ppDevice0);
				return ret;
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, VkDeviceCreateInfo* pCreateInfo, VkAllocationCallbacks* pAllocator, ref VkDevice pDevice)
		{
			fixed (VkDevice* ppDevice0 = &pDevice)
			{
				VkResult ret = CreateDeviceNative(physicalDevice, pCreateInfo, pAllocator, ppDevice0);
				return ret;
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, Span<VkDeviceCreateInfo> pCreateInfo, VkAllocationCallbacks* pAllocator, Span<VkDevice> pDevice)
		{
			fixed (VkDeviceCreateInfo* ppCreateInfo0 = pCreateInfo)
			{
				fixed (VkDevice* ppDevice1 = pDevice)
				{
					VkResult ret = CreateDeviceNative(physicalDevice, ppCreateInfo0, pAllocator, ppDevice1);
					return ret;
				}
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, ref VkDeviceCreateInfo pCreateInfo, VkAllocationCallbacks* pAllocator, ref VkDevice pDevice)
		{
			fixed (VkDeviceCreateInfo* ppCreateInfo0 = &pCreateInfo)
			{
				fixed (VkDevice* ppDevice1 = &pDevice)
				{
					VkResult ret = CreateDeviceNative(physicalDevice, ppCreateInfo0, pAllocator, ppDevice1);
					return ret;
				}
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, VkDeviceCreateInfo* pCreateInfo, Span<VkAllocationCallbacks> pAllocator, Span<VkDevice> pDevice)
		{
			fixed (VkAllocationCallbacks* ppAllocator0 = pAllocator)
			{
				fixed (VkDevice* ppDevice1 = pDevice)
				{
					VkResult ret = CreateDeviceNative(physicalDevice, pCreateInfo, ppAllocator0, ppDevice1);
					return ret;
				}
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, VkDeviceCreateInfo* pCreateInfo, ref VkAllocationCallbacks pAllocator, ref VkDevice pDevice)
		{
			fixed (VkAllocationCallbacks* ppAllocator0 = &pAllocator)
			{
				fixed (VkDevice* ppDevice1 = &pDevice)
				{
					VkResult ret = CreateDeviceNative(physicalDevice, pCreateInfo, ppAllocator0, ppDevice1);
					return ret;
				}
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, Span<VkDeviceCreateInfo> pCreateInfo, Span<VkAllocationCallbacks> pAllocator, Span<VkDevice> pDevice)
		{
			fixed (VkDeviceCreateInfo* ppCreateInfo0 = pCreateInfo)
			{
				fixed (VkAllocationCallbacks* ppAllocator1 = pAllocator)
				{
					fixed (VkDevice* ppDevice2 = pDevice)
					{
						VkResult ret = CreateDeviceNative(physicalDevice, ppCreateInfo0, ppAllocator1, ppDevice2);
						return ret;
					}
				}
			}
		}

		public VkResult CreateDevice(VkPhysicalDevice physicalDevice, ref VkDeviceCreateInfo pCreateInfo, ref VkAllocationCallbacks pAllocator, ref VkDevice pDevice)
		{
			fixed (VkDeviceCreateInfo* ppCreateInfo0 = &pCreateInfo)
			{
				fixed (VkAllocationCallbacks* ppAllocator1 = &pAllocator)
				{
					fixed (VkDevice* ppDevice2 = &pDevice)
					{
						VkResult ret = CreateDeviceNative(physicalDevice, ppCreateInfo0, ppAllocator1, ppDevice2);
						return ret;
					}
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal VkResult EnumerateDeviceLayerPropertiesNative(VkPhysicalDevice physicalDevice, uint* pPropertyCount, VkLayerProperties* pProperties)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<VkPhysicalDevice, uint*, VkLayerProperties*, VkResult>)funcTable[8])(physicalDevice, pPropertyCount, pProperties);
			#else
			return (VkResult)((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, VkResult>)funcTable[8])(physicalDevice, (nint)pPropertyCount, (nint)pProperties);
			#endif
		}

		public VkResult EnumerateDeviceLayerProperties(VkPhysicalDevice physicalDevice, uint* pPropertyCount, VkLayerProperties* pProperties)
		{
			VkResult ret = EnumerateDeviceLayerPropertiesNative(physicalDevice, pPropertyCount, pProperties);
			return ret;
		}

		public VkResult EnumerateDeviceLayerProperties(VkPhysicalDevice physicalDevice, Span<uint> pPropertyCount, VkLayerProperties* pProperties)
		{
			fixed (uint* ppPropertyCount0 = pPropertyCount)
			{
				VkResult ret = EnumerateDeviceLayerPropertiesNative(physicalDevice, ppPropertyCount0, pProperties);
				return ret;
			}
		}

		public VkResult EnumerateDeviceLayerProperties(VkPhysicalDevice physicalDevice, ref uint pPropertyCount, VkLayerProperties* pProperties)
		{
			fixed (uint* ppPropertyCount0 = &pPropertyCount)
			{
				VkResult ret = EnumerateDeviceLayerPropertiesNative(physicalDevice, ppPropertyCount0, pProperties);
				return ret;
			}
		}

		public VkResult EnumerateDeviceLayerProperties(VkPhysicalDevice physicalDevice, uint* pPropertyCount, Span<VkLayerProperties> pProperties)
		{
			fixed (VkLayerProperties* ppProperties0 = pProperties)
			{
				VkResult ret = EnumerateDeviceLayerPropertiesNative(physicalDevice, pPropertyCount, ppProperties0);
				return ret;
			}
		}

		public VkResult EnumerateDeviceLayerProperties(VkPhysicalDevice physicalDevice, uint* pPropertyCount, ref VkLayerProperties pProperties)
		{
			fixed (VkLayerProperties* ppProperties0 = &pProperties)
			{
				VkResult ret = EnumerateDeviceLayerPropertiesNative(physicalDevice, pPropertyCount, ppProperties0);
				return ret;
			}
		}

		public VkResult EnumerateDeviceLayerProperties(VkPhysicalDevice physicalDevice, Span<uint> pPropertyCount, Span<VkLayerProperties> pProperties)
		{
			fixed (uint* ppPropertyCount0 = pPropertyCount)
			{
				fixed (VkLayerProperties* ppProperties1 = pProperties)
				{
					VkResult ret = EnumerateDeviceLayerPropertiesNative(physicalDevice, ppPropertyCount0, ppProperties1);
					return ret;
				}
			}
		}

		public VkResult EnumerateDeviceLayerProperties(VkPhysicalDevice physicalDevice, ref uint pPropertyCount, ref VkLayerProperties pProperties)
		{
			fixed (uint* ppPropertyCount0 = &pPropertyCount)
			{
				fixed (VkLayerProperties* ppProperties1 = &pProperties)
				{
					VkResult ret = EnumerateDeviceLayerPropertiesNative(physicalDevice, ppPropertyCount0, ppProperties1);
					return ret;
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal VkResult EnumerateDeviceExtensionPropertiesNative(VkPhysicalDevice physicalDevice, byte* pLayerName, uint* pPropertyCount, VkExtensionProperties* pProperties)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<VkPhysicalDevice, byte*, uint*, VkExtensionProperties*, VkResult>)funcTable[9])(physicalDevice, pLayerName, pPropertyCount, pProperties);
			#else
			return (VkResult)((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, nint, VkResult>)funcTable[9])(physicalDevice, (nint)pLayerName, (nint)pPropertyCount, (nint)pProperties);
			#endif
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, byte* pLayerName, uint* pPropertyCount, VkExtensionProperties* pProperties)
		{
			VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, pLayerName, pPropertyCount, pProperties);
			return ret;
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, string pLayerName, uint* pPropertyCount, VkExtensionProperties* pProperties)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (pLayerName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(pLayerName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(pLayerName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, pStr0, pPropertyCount, pProperties);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, Span<byte> pLayerName, uint* pPropertyCount, VkExtensionProperties* pProperties)
		{
			fixed (byte* ppLayerName0 = pLayerName)
			{
				VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, ppLayerName0, pPropertyCount, pProperties);
				return ret;
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, ref byte pLayerName, uint* pPropertyCount, VkExtensionProperties* pProperties)
		{
			fixed (byte* ppLayerName0 = &pLayerName)
			{
				VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, ppLayerName0, pPropertyCount, pProperties);
				return ret;
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, byte* pLayerName, Span<uint> pPropertyCount, VkExtensionProperties* pProperties)
		{
			fixed (uint* ppPropertyCount0 = pPropertyCount)
			{
				VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, pLayerName, ppPropertyCount0, pProperties);
				return ret;
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, byte* pLayerName, ref uint pPropertyCount, VkExtensionProperties* pProperties)
		{
			fixed (uint* ppPropertyCount0 = &pPropertyCount)
			{
				VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, pLayerName, ppPropertyCount0, pProperties);
				return ret;
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, Span<byte> pLayerName, Span<uint> pPropertyCount, VkExtensionProperties* pProperties)
		{
			fixed (byte* ppLayerName0 = pLayerName)
			{
				fixed (uint* ppPropertyCount1 = pPropertyCount)
				{
					VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, ppLayerName0, ppPropertyCount1, pProperties);
					return ret;
				}
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, ref byte pLayerName, ref uint pPropertyCount, VkExtensionProperties* pProperties)
		{
			fixed (byte* ppLayerName0 = &pLayerName)
			{
				fixed (uint* ppPropertyCount1 = &pPropertyCount)
				{
					VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, ppLayerName0, ppPropertyCount1, pProperties);
					return ret;
				}
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, byte* pLayerName, uint* pPropertyCount, Span<VkExtensionProperties> pProperties)
		{
			fixed (VkExtensionProperties* ppProperties0 = pProperties)
			{
				VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, pLayerName, pPropertyCount, ppProperties0);
				return ret;
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, byte* pLayerName, uint* pPropertyCount, ref VkExtensionProperties pProperties)
		{
			fixed (VkExtensionProperties* ppProperties0 = &pProperties)
			{
				VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, pLayerName, pPropertyCount, ppProperties0);
				return ret;
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, Span<byte> pLayerName, uint* pPropertyCount, Span<VkExtensionProperties> pProperties)
		{
			fixed (byte* ppLayerName0 = pLayerName)
			{
				fixed (VkExtensionProperties* ppProperties1 = pProperties)
				{
					VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, ppLayerName0, pPropertyCount, ppProperties1);
					return ret;
				}
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, ref byte pLayerName, uint* pPropertyCount, ref VkExtensionProperties pProperties)
		{
			fixed (byte* ppLayerName0 = &pLayerName)
			{
				fixed (VkExtensionProperties* ppProperties1 = &pProperties)
				{
					VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, ppLayerName0, pPropertyCount, ppProperties1);
					return ret;
				}
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, byte* pLayerName, Span<uint> pPropertyCount, Span<VkExtensionProperties> pProperties)
		{
			fixed (uint* ppPropertyCount0 = pPropertyCount)
			{
				fixed (VkExtensionProperties* ppProperties1 = pProperties)
				{
					VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, pLayerName, ppPropertyCount0, ppProperties1);
					return ret;
				}
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, byte* pLayerName, ref uint pPropertyCount, ref VkExtensionProperties pProperties)
		{
			fixed (uint* ppPropertyCount0 = &pPropertyCount)
			{
				fixed (VkExtensionProperties* ppProperties1 = &pProperties)
				{
					VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, pLayerName, ppPropertyCount0, ppProperties1);
					return ret;
				}
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, Span<byte> pLayerName, Span<uint> pPropertyCount, Span<VkExtensionProperties> pProperties)
		{
			fixed (byte* ppLayerName0 = pLayerName)
			{
				fixed (uint* ppPropertyCount1 = pPropertyCount)
				{
					fixed (VkExtensionProperties* ppProperties2 = pProperties)
					{
						VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, ppLayerName0, ppPropertyCount1, ppProperties2);
						return ret;
					}
				}
			}
		}

		public VkResult EnumerateDeviceExtensionProperties(VkPhysicalDevice physicalDevice, ref byte pLayerName, ref uint pPropertyCount, ref VkExtensionProperties pProperties)
		{
			fixed (byte* ppLayerName0 = &pLayerName)
			{
				fixed (uint* ppPropertyCount1 = &pPropertyCount)
				{
					fixed (VkExtensionProperties* ppProperties2 = &pProperties)
					{
						VkResult ret = EnumerateDeviceExtensionPropertiesNative(physicalDevice, ppLayerName0, ppPropertyCount1, ppProperties2);
						return ret;
					}
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceSparseImageFormatPropertiesNative(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlags samples, VkImageUsageFlags usage, VkImageTiling tiling, uint* pPropertyCount, VkSparseImageFormatProperties* pProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkFormat, VkImageType, VkSampleCountFlags, VkImageUsageFlags, VkImageTiling, uint*, VkSparseImageFormatProperties*, void>)funcTable[10])(physicalDevice, format, type, samples, usage, tiling, pPropertyCount, pProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkFormat, VkImageType, VkSampleCountFlags, VkImageUsageFlags, VkImageTiling, nint, nint, void>)funcTable[10])(physicalDevice, format, type, samples, usage, tiling, (nint)pPropertyCount, (nint)pProperties);
			#endif
		}

		public void GetPhysicalDeviceSparseImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlags samples, VkImageUsageFlags usage, VkImageTiling tiling, uint* pPropertyCount, VkSparseImageFormatProperties* pProperties)
		{
			GetPhysicalDeviceSparseImageFormatPropertiesNative(physicalDevice, format, type, samples, usage, tiling, pPropertyCount, pProperties);
		}

		public void GetPhysicalDeviceSparseImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlags samples, VkImageUsageFlags usage, VkImageTiling tiling, Span<uint> pPropertyCount, VkSparseImageFormatProperties* pProperties)
		{
			fixed (uint* ppPropertyCount0 = pPropertyCount)
			{
				GetPhysicalDeviceSparseImageFormatPropertiesNative(physicalDevice, format, type, samples, usage, tiling, ppPropertyCount0, pProperties);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlags samples, VkImageUsageFlags usage, VkImageTiling tiling, ref uint pPropertyCount, VkSparseImageFormatProperties* pProperties)
		{
			fixed (uint* ppPropertyCount0 = &pPropertyCount)
			{
				GetPhysicalDeviceSparseImageFormatPropertiesNative(physicalDevice, format, type, samples, usage, tiling, ppPropertyCount0, pProperties);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlags samples, VkImageUsageFlags usage, VkImageTiling tiling, uint* pPropertyCount, Span<VkSparseImageFormatProperties> pProperties)
		{
			fixed (VkSparseImageFormatProperties* ppProperties0 = pProperties)
			{
				GetPhysicalDeviceSparseImageFormatPropertiesNative(physicalDevice, format, type, samples, usage, tiling, pPropertyCount, ppProperties0);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlags samples, VkImageUsageFlags usage, VkImageTiling tiling, uint* pPropertyCount, ref VkSparseImageFormatProperties pProperties)
		{
			fixed (VkSparseImageFormatProperties* ppProperties0 = &pProperties)
			{
				GetPhysicalDeviceSparseImageFormatPropertiesNative(physicalDevice, format, type, samples, usage, tiling, pPropertyCount, ppProperties0);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlags samples, VkImageUsageFlags usage, VkImageTiling tiling, Span<uint> pPropertyCount, Span<VkSparseImageFormatProperties> pProperties)
		{
			fixed (uint* ppPropertyCount0 = pPropertyCount)
			{
				fixed (VkSparseImageFormatProperties* ppProperties1 = pProperties)
				{
					GetPhysicalDeviceSparseImageFormatPropertiesNative(physicalDevice, format, type, samples, usage, tiling, ppPropertyCount0, ppProperties1);
				}
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties(VkPhysicalDevice physicalDevice, VkFormat format, VkImageType type, VkSampleCountFlags samples, VkImageUsageFlags usage, VkImageTiling tiling, ref uint pPropertyCount, ref VkSparseImageFormatProperties pProperties)
		{
			fixed (uint* ppPropertyCount0 = &pPropertyCount)
			{
				fixed (VkSparseImageFormatProperties* ppProperties1 = &pProperties)
				{
					GetPhysicalDeviceSparseImageFormatPropertiesNative(physicalDevice, format, type, samples, usage, tiling, ppPropertyCount0, ppProperties1);
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceFeatures2Native(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures2* pFeatures)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceFeatures2*, void>)funcTable[11])(physicalDevice, pFeatures);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, void>)funcTable[11])(physicalDevice, (nint)pFeatures);
			#endif
		}

		public void GetPhysicalDeviceFeatures2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceFeatures2* pFeatures)
		{
			GetPhysicalDeviceFeatures2Native(physicalDevice, pFeatures);
		}

		public void GetPhysicalDeviceFeatures2(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceFeatures2> pFeatures)
		{
			fixed (VkPhysicalDeviceFeatures2* ppFeatures0 = pFeatures)
			{
				GetPhysicalDeviceFeatures2Native(physicalDevice, ppFeatures0);
			}
		}

		public void GetPhysicalDeviceFeatures2(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceFeatures2 pFeatures)
		{
			fixed (VkPhysicalDeviceFeatures2* ppFeatures0 = &pFeatures)
			{
				GetPhysicalDeviceFeatures2Native(physicalDevice, ppFeatures0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceProperties2Native(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties2* pProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceProperties2*, void>)funcTable[12])(physicalDevice, pProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, void>)funcTable[12])(physicalDevice, (nint)pProperties);
			#endif
		}

		public void GetPhysicalDeviceProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceProperties2* pProperties)
		{
			GetPhysicalDeviceProperties2Native(physicalDevice, pProperties);
		}

		public void GetPhysicalDeviceProperties2(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceProperties2> pProperties)
		{
			fixed (VkPhysicalDeviceProperties2* ppProperties0 = pProperties)
			{
				GetPhysicalDeviceProperties2Native(physicalDevice, ppProperties0);
			}
		}

		public void GetPhysicalDeviceProperties2(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceProperties2 pProperties)
		{
			fixed (VkPhysicalDeviceProperties2* ppProperties0 = &pProperties)
			{
				GetPhysicalDeviceProperties2Native(physicalDevice, ppProperties0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceFormatProperties2Native(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties2* pFormatProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkFormat, VkFormatProperties2*, void>)funcTable[13])(physicalDevice, format, pFormatProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkFormat, nint, void>)funcTable[13])(physicalDevice, format, (nint)pFormatProperties);
			#endif
		}

		public void GetPhysicalDeviceFormatProperties2(VkPhysicalDevice physicalDevice, VkFormat format, VkFormatProperties2* pFormatProperties)
		{
			GetPhysicalDeviceFormatProperties2Native(physicalDevice, format, pFormatProperties);
		}

		public void GetPhysicalDeviceFormatProperties2(VkPhysicalDevice physicalDevice, VkFormat format, Span<VkFormatProperties2> pFormatProperties)
		{
			fixed (VkFormatProperties2* ppFormatProperties0 = pFormatProperties)
			{
				GetPhysicalDeviceFormatProperties2Native(physicalDevice, format, ppFormatProperties0);
			}
		}

		public void GetPhysicalDeviceFormatProperties2(VkPhysicalDevice physicalDevice, VkFormat format, ref VkFormatProperties2 pFormatProperties)
		{
			fixed (VkFormatProperties2* ppFormatProperties0 = &pFormatProperties)
			{
				GetPhysicalDeviceFormatProperties2Native(physicalDevice, format, ppFormatProperties0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal VkResult GetPhysicalDeviceImageFormatProperties2Native(VkPhysicalDevice physicalDevice, VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo, VkImageFormatProperties2* pImageFormatProperties)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceImageFormatInfo2*, VkImageFormatProperties2*, VkResult>)funcTable[14])(physicalDevice, pImageFormatInfo, pImageFormatProperties);
			#else
			return (VkResult)((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, VkResult>)funcTable[14])(physicalDevice, (nint)pImageFormatInfo, (nint)pImageFormatProperties);
			#endif
		}

		public VkResult GetPhysicalDeviceImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo, VkImageFormatProperties2* pImageFormatProperties)
		{
			VkResult ret = GetPhysicalDeviceImageFormatProperties2Native(physicalDevice, pImageFormatInfo, pImageFormatProperties);
			return ret;
		}

		public VkResult GetPhysicalDeviceImageFormatProperties2(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceImageFormatInfo2> pImageFormatInfo, VkImageFormatProperties2* pImageFormatProperties)
		{
			fixed (VkPhysicalDeviceImageFormatInfo2* ppImageFormatInfo0 = pImageFormatInfo)
			{
				VkResult ret = GetPhysicalDeviceImageFormatProperties2Native(physicalDevice, ppImageFormatInfo0, pImageFormatProperties);
				return ret;
			}
		}

		public VkResult GetPhysicalDeviceImageFormatProperties2(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceImageFormatInfo2 pImageFormatInfo, VkImageFormatProperties2* pImageFormatProperties)
		{
			fixed (VkPhysicalDeviceImageFormatInfo2* ppImageFormatInfo0 = &pImageFormatInfo)
			{
				VkResult ret = GetPhysicalDeviceImageFormatProperties2Native(physicalDevice, ppImageFormatInfo0, pImageFormatProperties);
				return ret;
			}
		}

		public VkResult GetPhysicalDeviceImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo, Span<VkImageFormatProperties2> pImageFormatProperties)
		{
			fixed (VkImageFormatProperties2* ppImageFormatProperties0 = pImageFormatProperties)
			{
				VkResult ret = GetPhysicalDeviceImageFormatProperties2Native(physicalDevice, pImageFormatInfo, ppImageFormatProperties0);
				return ret;
			}
		}

		public VkResult GetPhysicalDeviceImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo, ref VkImageFormatProperties2 pImageFormatProperties)
		{
			fixed (VkImageFormatProperties2* ppImageFormatProperties0 = &pImageFormatProperties)
			{
				VkResult ret = GetPhysicalDeviceImageFormatProperties2Native(physicalDevice, pImageFormatInfo, ppImageFormatProperties0);
				return ret;
			}
		}

		public VkResult GetPhysicalDeviceImageFormatProperties2(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceImageFormatInfo2> pImageFormatInfo, Span<VkImageFormatProperties2> pImageFormatProperties)
		{
			fixed (VkPhysicalDeviceImageFormatInfo2* ppImageFormatInfo0 = pImageFormatInfo)
			{
				fixed (VkImageFormatProperties2* ppImageFormatProperties1 = pImageFormatProperties)
				{
					VkResult ret = GetPhysicalDeviceImageFormatProperties2Native(physicalDevice, ppImageFormatInfo0, ppImageFormatProperties1);
					return ret;
				}
			}
		}

		public VkResult GetPhysicalDeviceImageFormatProperties2(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceImageFormatInfo2 pImageFormatInfo, ref VkImageFormatProperties2 pImageFormatProperties)
		{
			fixed (VkPhysicalDeviceImageFormatInfo2* ppImageFormatInfo0 = &pImageFormatInfo)
			{
				fixed (VkImageFormatProperties2* ppImageFormatProperties1 = &pImageFormatProperties)
				{
					VkResult ret = GetPhysicalDeviceImageFormatProperties2Native(physicalDevice, ppImageFormatInfo0, ppImageFormatProperties1);
					return ret;
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceQueueFamilyProperties2Native(VkPhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, VkQueueFamilyProperties2* pQueueFamilyProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, uint*, VkQueueFamilyProperties2*, void>)funcTable[15])(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, void>)funcTable[15])(physicalDevice, (nint)pQueueFamilyPropertyCount, (nint)pQueueFamilyProperties);
			#endif
		}

		public void GetPhysicalDeviceQueueFamilyProperties2(VkPhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, VkQueueFamilyProperties2* pQueueFamilyProperties)
		{
			GetPhysicalDeviceQueueFamilyProperties2Native(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties);
		}

		public void GetPhysicalDeviceQueueFamilyProperties2(VkPhysicalDevice physicalDevice, Span<uint> pQueueFamilyPropertyCount, VkQueueFamilyProperties2* pQueueFamilyProperties)
		{
			fixed (uint* ppQueueFamilyPropertyCount0 = pQueueFamilyPropertyCount)
			{
				GetPhysicalDeviceQueueFamilyProperties2Native(physicalDevice, ppQueueFamilyPropertyCount0, pQueueFamilyProperties);
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties2(VkPhysicalDevice physicalDevice, ref uint pQueueFamilyPropertyCount, VkQueueFamilyProperties2* pQueueFamilyProperties)
		{
			fixed (uint* ppQueueFamilyPropertyCount0 = &pQueueFamilyPropertyCount)
			{
				GetPhysicalDeviceQueueFamilyProperties2Native(physicalDevice, ppQueueFamilyPropertyCount0, pQueueFamilyProperties);
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties2(VkPhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, Span<VkQueueFamilyProperties2> pQueueFamilyProperties)
		{
			fixed (VkQueueFamilyProperties2* ppQueueFamilyProperties0 = pQueueFamilyProperties)
			{
				GetPhysicalDeviceQueueFamilyProperties2Native(physicalDevice, pQueueFamilyPropertyCount, ppQueueFamilyProperties0);
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties2(VkPhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, ref VkQueueFamilyProperties2 pQueueFamilyProperties)
		{
			fixed (VkQueueFamilyProperties2* ppQueueFamilyProperties0 = &pQueueFamilyProperties)
			{
				GetPhysicalDeviceQueueFamilyProperties2Native(physicalDevice, pQueueFamilyPropertyCount, ppQueueFamilyProperties0);
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties2(VkPhysicalDevice physicalDevice, Span<uint> pQueueFamilyPropertyCount, Span<VkQueueFamilyProperties2> pQueueFamilyProperties)
		{
			fixed (uint* ppQueueFamilyPropertyCount0 = pQueueFamilyPropertyCount)
			{
				fixed (VkQueueFamilyProperties2* ppQueueFamilyProperties1 = pQueueFamilyProperties)
				{
					GetPhysicalDeviceQueueFamilyProperties2Native(physicalDevice, ppQueueFamilyPropertyCount0, ppQueueFamilyProperties1);
				}
			}
		}

		public void GetPhysicalDeviceQueueFamilyProperties2(VkPhysicalDevice physicalDevice, ref uint pQueueFamilyPropertyCount, ref VkQueueFamilyProperties2 pQueueFamilyProperties)
		{
			fixed (uint* ppQueueFamilyPropertyCount0 = &pQueueFamilyPropertyCount)
			{
				fixed (VkQueueFamilyProperties2* ppQueueFamilyProperties1 = &pQueueFamilyProperties)
				{
					GetPhysicalDeviceQueueFamilyProperties2Native(physicalDevice, ppQueueFamilyPropertyCount0, ppQueueFamilyProperties1);
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceMemoryProperties2Native(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties2* pMemoryProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceMemoryProperties2*, void>)funcTable[16])(physicalDevice, pMemoryProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, void>)funcTable[16])(physicalDevice, (nint)pMemoryProperties);
			#endif
		}

		public void GetPhysicalDeviceMemoryProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceMemoryProperties2* pMemoryProperties)
		{
			GetPhysicalDeviceMemoryProperties2Native(physicalDevice, pMemoryProperties);
		}

		public void GetPhysicalDeviceMemoryProperties2(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceMemoryProperties2> pMemoryProperties)
		{
			fixed (VkPhysicalDeviceMemoryProperties2* ppMemoryProperties0 = pMemoryProperties)
			{
				GetPhysicalDeviceMemoryProperties2Native(physicalDevice, ppMemoryProperties0);
			}
		}

		public void GetPhysicalDeviceMemoryProperties2(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceMemoryProperties2 pMemoryProperties)
		{
			fixed (VkPhysicalDeviceMemoryProperties2* ppMemoryProperties0 = &pMemoryProperties)
			{
				GetPhysicalDeviceMemoryProperties2Native(physicalDevice, ppMemoryProperties0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceSparseImageFormatProperties2Native(VkPhysicalDevice physicalDevice, VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo, uint* pPropertyCount, VkSparseImageFormatProperties2* pProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceSparseImageFormatInfo2*, uint*, VkSparseImageFormatProperties2*, void>)funcTable[17])(physicalDevice, pFormatInfo, pPropertyCount, pProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, nint, void>)funcTable[17])(physicalDevice, (nint)pFormatInfo, (nint)pPropertyCount, (nint)pProperties);
			#endif
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo, uint* pPropertyCount, VkSparseImageFormatProperties2* pProperties)
		{
			GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, pFormatInfo, pPropertyCount, pProperties);
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceSparseImageFormatInfo2> pFormatInfo, uint* pPropertyCount, VkSparseImageFormatProperties2* pProperties)
		{
			fixed (VkPhysicalDeviceSparseImageFormatInfo2* ppFormatInfo0 = pFormatInfo)
			{
				GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, ppFormatInfo0, pPropertyCount, pProperties);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceSparseImageFormatInfo2 pFormatInfo, uint* pPropertyCount, VkSparseImageFormatProperties2* pProperties)
		{
			fixed (VkPhysicalDeviceSparseImageFormatInfo2* ppFormatInfo0 = &pFormatInfo)
			{
				GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, ppFormatInfo0, pPropertyCount, pProperties);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo, Span<uint> pPropertyCount, VkSparseImageFormatProperties2* pProperties)
		{
			fixed (uint* ppPropertyCount0 = pPropertyCount)
			{
				GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, pFormatInfo, ppPropertyCount0, pProperties);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo, ref uint pPropertyCount, VkSparseImageFormatProperties2* pProperties)
		{
			fixed (uint* ppPropertyCount0 = &pPropertyCount)
			{
				GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, pFormatInfo, ppPropertyCount0, pProperties);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceSparseImageFormatInfo2> pFormatInfo, Span<uint> pPropertyCount, VkSparseImageFormatProperties2* pProperties)
		{
			fixed (VkPhysicalDeviceSparseImageFormatInfo2* ppFormatInfo0 = pFormatInfo)
			{
				fixed (uint* ppPropertyCount1 = pPropertyCount)
				{
					GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, ppFormatInfo0, ppPropertyCount1, pProperties);
				}
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceSparseImageFormatInfo2 pFormatInfo, ref uint pPropertyCount, VkSparseImageFormatProperties2* pProperties)
		{
			fixed (VkPhysicalDeviceSparseImageFormatInfo2* ppFormatInfo0 = &pFormatInfo)
			{
				fixed (uint* ppPropertyCount1 = &pPropertyCount)
				{
					GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, ppFormatInfo0, ppPropertyCount1, pProperties);
				}
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo, uint* pPropertyCount, Span<VkSparseImageFormatProperties2> pProperties)
		{
			fixed (VkSparseImageFormatProperties2* ppProperties0 = pProperties)
			{
				GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, pFormatInfo, pPropertyCount, ppProperties0);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo, uint* pPropertyCount, ref VkSparseImageFormatProperties2 pProperties)
		{
			fixed (VkSparseImageFormatProperties2* ppProperties0 = &pProperties)
			{
				GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, pFormatInfo, pPropertyCount, ppProperties0);
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceSparseImageFormatInfo2> pFormatInfo, uint* pPropertyCount, Span<VkSparseImageFormatProperties2> pProperties)
		{
			fixed (VkPhysicalDeviceSparseImageFormatInfo2* ppFormatInfo0 = pFormatInfo)
			{
				fixed (VkSparseImageFormatProperties2* ppProperties1 = pProperties)
				{
					GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, ppFormatInfo0, pPropertyCount, ppProperties1);
				}
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceSparseImageFormatInfo2 pFormatInfo, uint* pPropertyCount, ref VkSparseImageFormatProperties2 pProperties)
		{
			fixed (VkPhysicalDeviceSparseImageFormatInfo2* ppFormatInfo0 = &pFormatInfo)
			{
				fixed (VkSparseImageFormatProperties2* ppProperties1 = &pProperties)
				{
					GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, ppFormatInfo0, pPropertyCount, ppProperties1);
				}
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo, Span<uint> pPropertyCount, Span<VkSparseImageFormatProperties2> pProperties)
		{
			fixed (uint* ppPropertyCount0 = pPropertyCount)
			{
				fixed (VkSparseImageFormatProperties2* ppProperties1 = pProperties)
				{
					GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, pFormatInfo, ppPropertyCount0, ppProperties1);
				}
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo, ref uint pPropertyCount, ref VkSparseImageFormatProperties2 pProperties)
		{
			fixed (uint* ppPropertyCount0 = &pPropertyCount)
			{
				fixed (VkSparseImageFormatProperties2* ppProperties1 = &pProperties)
				{
					GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, pFormatInfo, ppPropertyCount0, ppProperties1);
				}
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceSparseImageFormatInfo2> pFormatInfo, Span<uint> pPropertyCount, Span<VkSparseImageFormatProperties2> pProperties)
		{
			fixed (VkPhysicalDeviceSparseImageFormatInfo2* ppFormatInfo0 = pFormatInfo)
			{
				fixed (uint* ppPropertyCount1 = pPropertyCount)
				{
					fixed (VkSparseImageFormatProperties2* ppProperties2 = pProperties)
					{
						GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, ppFormatInfo0, ppPropertyCount1, ppProperties2);
					}
				}
			}
		}

		public void GetPhysicalDeviceSparseImageFormatProperties2(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceSparseImageFormatInfo2 pFormatInfo, ref uint pPropertyCount, ref VkSparseImageFormatProperties2 pProperties)
		{
			fixed (VkPhysicalDeviceSparseImageFormatInfo2* ppFormatInfo0 = &pFormatInfo)
			{
				fixed (uint* ppPropertyCount1 = &pPropertyCount)
				{
					fixed (VkSparseImageFormatProperties2* ppProperties2 = &pProperties)
					{
						GetPhysicalDeviceSparseImageFormatProperties2Native(physicalDevice, ppFormatInfo0, ppPropertyCount1, ppProperties2);
					}
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceExternalBufferPropertiesNative(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo, VkExternalBufferProperties* pExternalBufferProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceExternalBufferInfo*, VkExternalBufferProperties*, void>)funcTable[18])(physicalDevice, pExternalBufferInfo, pExternalBufferProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, void>)funcTable[18])(physicalDevice, (nint)pExternalBufferInfo, (nint)pExternalBufferProperties);
			#endif
		}

		public void GetPhysicalDeviceExternalBufferProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo, VkExternalBufferProperties* pExternalBufferProperties)
		{
			GetPhysicalDeviceExternalBufferPropertiesNative(physicalDevice, pExternalBufferInfo, pExternalBufferProperties);
		}

		public void GetPhysicalDeviceExternalBufferProperties(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceExternalBufferInfo> pExternalBufferInfo, VkExternalBufferProperties* pExternalBufferProperties)
		{
			fixed (VkPhysicalDeviceExternalBufferInfo* ppExternalBufferInfo0 = pExternalBufferInfo)
			{
				GetPhysicalDeviceExternalBufferPropertiesNative(physicalDevice, ppExternalBufferInfo0, pExternalBufferProperties);
			}
		}

		public void GetPhysicalDeviceExternalBufferProperties(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceExternalBufferInfo pExternalBufferInfo, VkExternalBufferProperties* pExternalBufferProperties)
		{
			fixed (VkPhysicalDeviceExternalBufferInfo* ppExternalBufferInfo0 = &pExternalBufferInfo)
			{
				GetPhysicalDeviceExternalBufferPropertiesNative(physicalDevice, ppExternalBufferInfo0, pExternalBufferProperties);
			}
		}

		public void GetPhysicalDeviceExternalBufferProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo, Span<VkExternalBufferProperties> pExternalBufferProperties)
		{
			fixed (VkExternalBufferProperties* ppExternalBufferProperties0 = pExternalBufferProperties)
			{
				GetPhysicalDeviceExternalBufferPropertiesNative(physicalDevice, pExternalBufferInfo, ppExternalBufferProperties0);
			}
		}

		public void GetPhysicalDeviceExternalBufferProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo, ref VkExternalBufferProperties pExternalBufferProperties)
		{
			fixed (VkExternalBufferProperties* ppExternalBufferProperties0 = &pExternalBufferProperties)
			{
				GetPhysicalDeviceExternalBufferPropertiesNative(physicalDevice, pExternalBufferInfo, ppExternalBufferProperties0);
			}
		}

		public void GetPhysicalDeviceExternalBufferProperties(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceExternalBufferInfo> pExternalBufferInfo, Span<VkExternalBufferProperties> pExternalBufferProperties)
		{
			fixed (VkPhysicalDeviceExternalBufferInfo* ppExternalBufferInfo0 = pExternalBufferInfo)
			{
				fixed (VkExternalBufferProperties* ppExternalBufferProperties1 = pExternalBufferProperties)
				{
					GetPhysicalDeviceExternalBufferPropertiesNative(physicalDevice, ppExternalBufferInfo0, ppExternalBufferProperties1);
				}
			}
		}

		public void GetPhysicalDeviceExternalBufferProperties(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceExternalBufferInfo pExternalBufferInfo, ref VkExternalBufferProperties pExternalBufferProperties)
		{
			fixed (VkPhysicalDeviceExternalBufferInfo* ppExternalBufferInfo0 = &pExternalBufferInfo)
			{
				fixed (VkExternalBufferProperties* ppExternalBufferProperties1 = &pExternalBufferProperties)
				{
					GetPhysicalDeviceExternalBufferPropertiesNative(physicalDevice, ppExternalBufferInfo0, ppExternalBufferProperties1);
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceExternalSemaphorePropertiesNative(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo, VkExternalSemaphoreProperties* pExternalSemaphoreProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceExternalSemaphoreInfo*, VkExternalSemaphoreProperties*, void>)funcTable[19])(physicalDevice, pExternalSemaphoreInfo, pExternalSemaphoreProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, void>)funcTable[19])(physicalDevice, (nint)pExternalSemaphoreInfo, (nint)pExternalSemaphoreProperties);
			#endif
		}

		public void GetPhysicalDeviceExternalSemaphoreProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo, VkExternalSemaphoreProperties* pExternalSemaphoreProperties)
		{
			GetPhysicalDeviceExternalSemaphorePropertiesNative(physicalDevice, pExternalSemaphoreInfo, pExternalSemaphoreProperties);
		}

		public void GetPhysicalDeviceExternalSemaphoreProperties(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceExternalSemaphoreInfo> pExternalSemaphoreInfo, VkExternalSemaphoreProperties* pExternalSemaphoreProperties)
		{
			fixed (VkPhysicalDeviceExternalSemaphoreInfo* ppExternalSemaphoreInfo0 = pExternalSemaphoreInfo)
			{
				GetPhysicalDeviceExternalSemaphorePropertiesNative(physicalDevice, ppExternalSemaphoreInfo0, pExternalSemaphoreProperties);
			}
		}

		public void GetPhysicalDeviceExternalSemaphoreProperties(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceExternalSemaphoreInfo pExternalSemaphoreInfo, VkExternalSemaphoreProperties* pExternalSemaphoreProperties)
		{
			fixed (VkPhysicalDeviceExternalSemaphoreInfo* ppExternalSemaphoreInfo0 = &pExternalSemaphoreInfo)
			{
				GetPhysicalDeviceExternalSemaphorePropertiesNative(physicalDevice, ppExternalSemaphoreInfo0, pExternalSemaphoreProperties);
			}
		}

		public void GetPhysicalDeviceExternalSemaphoreProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo, Span<VkExternalSemaphoreProperties> pExternalSemaphoreProperties)
		{
			fixed (VkExternalSemaphoreProperties* ppExternalSemaphoreProperties0 = pExternalSemaphoreProperties)
			{
				GetPhysicalDeviceExternalSemaphorePropertiesNative(physicalDevice, pExternalSemaphoreInfo, ppExternalSemaphoreProperties0);
			}
		}

		public void GetPhysicalDeviceExternalSemaphoreProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo, ref VkExternalSemaphoreProperties pExternalSemaphoreProperties)
		{
			fixed (VkExternalSemaphoreProperties* ppExternalSemaphoreProperties0 = &pExternalSemaphoreProperties)
			{
				GetPhysicalDeviceExternalSemaphorePropertiesNative(physicalDevice, pExternalSemaphoreInfo, ppExternalSemaphoreProperties0);
			}
		}

		public void GetPhysicalDeviceExternalSemaphoreProperties(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceExternalSemaphoreInfo> pExternalSemaphoreInfo, Span<VkExternalSemaphoreProperties> pExternalSemaphoreProperties)
		{
			fixed (VkPhysicalDeviceExternalSemaphoreInfo* ppExternalSemaphoreInfo0 = pExternalSemaphoreInfo)
			{
				fixed (VkExternalSemaphoreProperties* ppExternalSemaphoreProperties1 = pExternalSemaphoreProperties)
				{
					GetPhysicalDeviceExternalSemaphorePropertiesNative(physicalDevice, ppExternalSemaphoreInfo0, ppExternalSemaphoreProperties1);
				}
			}
		}

		public void GetPhysicalDeviceExternalSemaphoreProperties(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceExternalSemaphoreInfo pExternalSemaphoreInfo, ref VkExternalSemaphoreProperties pExternalSemaphoreProperties)
		{
			fixed (VkPhysicalDeviceExternalSemaphoreInfo* ppExternalSemaphoreInfo0 = &pExternalSemaphoreInfo)
			{
				fixed (VkExternalSemaphoreProperties* ppExternalSemaphoreProperties1 = &pExternalSemaphoreProperties)
				{
					GetPhysicalDeviceExternalSemaphorePropertiesNative(physicalDevice, ppExternalSemaphoreInfo0, ppExternalSemaphoreProperties1);
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void GetPhysicalDeviceExternalFencePropertiesNative(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo, VkExternalFenceProperties* pExternalFenceProperties)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, VkPhysicalDeviceExternalFenceInfo*, VkExternalFenceProperties*, void>)funcTable[20])(physicalDevice, pExternalFenceInfo, pExternalFenceProperties);
			#else
			((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, void>)funcTable[20])(physicalDevice, (nint)pExternalFenceInfo, (nint)pExternalFenceProperties);
			#endif
		}

		public void GetPhysicalDeviceExternalFenceProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo, VkExternalFenceProperties* pExternalFenceProperties)
		{
			GetPhysicalDeviceExternalFencePropertiesNative(physicalDevice, pExternalFenceInfo, pExternalFenceProperties);
		}

		public void GetPhysicalDeviceExternalFenceProperties(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceExternalFenceInfo> pExternalFenceInfo, VkExternalFenceProperties* pExternalFenceProperties)
		{
			fixed (VkPhysicalDeviceExternalFenceInfo* ppExternalFenceInfo0 = pExternalFenceInfo)
			{
				GetPhysicalDeviceExternalFencePropertiesNative(physicalDevice, ppExternalFenceInfo0, pExternalFenceProperties);
			}
		}

		public void GetPhysicalDeviceExternalFenceProperties(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceExternalFenceInfo pExternalFenceInfo, VkExternalFenceProperties* pExternalFenceProperties)
		{
			fixed (VkPhysicalDeviceExternalFenceInfo* ppExternalFenceInfo0 = &pExternalFenceInfo)
			{
				GetPhysicalDeviceExternalFencePropertiesNative(physicalDevice, ppExternalFenceInfo0, pExternalFenceProperties);
			}
		}

		public void GetPhysicalDeviceExternalFenceProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo, Span<VkExternalFenceProperties> pExternalFenceProperties)
		{
			fixed (VkExternalFenceProperties* ppExternalFenceProperties0 = pExternalFenceProperties)
			{
				GetPhysicalDeviceExternalFencePropertiesNative(physicalDevice, pExternalFenceInfo, ppExternalFenceProperties0);
			}
		}

		public void GetPhysicalDeviceExternalFenceProperties(VkPhysicalDevice physicalDevice, VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo, ref VkExternalFenceProperties pExternalFenceProperties)
		{
			fixed (VkExternalFenceProperties* ppExternalFenceProperties0 = &pExternalFenceProperties)
			{
				GetPhysicalDeviceExternalFencePropertiesNative(physicalDevice, pExternalFenceInfo, ppExternalFenceProperties0);
			}
		}

		public void GetPhysicalDeviceExternalFenceProperties(VkPhysicalDevice physicalDevice, Span<VkPhysicalDeviceExternalFenceInfo> pExternalFenceInfo, Span<VkExternalFenceProperties> pExternalFenceProperties)
		{
			fixed (VkPhysicalDeviceExternalFenceInfo* ppExternalFenceInfo0 = pExternalFenceInfo)
			{
				fixed (VkExternalFenceProperties* ppExternalFenceProperties1 = pExternalFenceProperties)
				{
					GetPhysicalDeviceExternalFencePropertiesNative(physicalDevice, ppExternalFenceInfo0, ppExternalFenceProperties1);
				}
			}
		}

		public void GetPhysicalDeviceExternalFenceProperties(VkPhysicalDevice physicalDevice, ref VkPhysicalDeviceExternalFenceInfo pExternalFenceInfo, ref VkExternalFenceProperties pExternalFenceProperties)
		{
			fixed (VkPhysicalDeviceExternalFenceInfo* ppExternalFenceInfo0 = &pExternalFenceInfo)
			{
				fixed (VkExternalFenceProperties* ppExternalFenceProperties1 = &pExternalFenceProperties)
				{
					GetPhysicalDeviceExternalFencePropertiesNative(physicalDevice, ppExternalFenceInfo0, ppExternalFenceProperties1);
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal VkResult EnumeratePhysicalDeviceGroupsNative(VkInstance instance, uint* pPhysicalDeviceGroupCount, VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<VkInstance, uint*, VkPhysicalDeviceGroupProperties*, VkResult>)funcTable[21])(instance, pPhysicalDeviceGroupCount, pPhysicalDeviceGroupProperties);
			#else
			return (VkResult)((delegate* unmanaged[Cdecl]<VkInstance, nint, nint, VkResult>)funcTable[21])(instance, (nint)pPhysicalDeviceGroupCount, (nint)pPhysicalDeviceGroupProperties);
			#endif
		}

		public VkResult EnumeratePhysicalDeviceGroups(VkInstance instance, uint* pPhysicalDeviceGroupCount, VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties)
		{
			VkResult ret = EnumeratePhysicalDeviceGroupsNative(instance, pPhysicalDeviceGroupCount, pPhysicalDeviceGroupProperties);
			return ret;
		}

		public VkResult EnumeratePhysicalDeviceGroups(VkInstance instance, Span<uint> pPhysicalDeviceGroupCount, VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties)
		{
			fixed (uint* ppPhysicalDeviceGroupCount0 = pPhysicalDeviceGroupCount)
			{
				VkResult ret = EnumeratePhysicalDeviceGroupsNative(instance, ppPhysicalDeviceGroupCount0, pPhysicalDeviceGroupProperties);
				return ret;
			}
		}

		public VkResult EnumeratePhysicalDeviceGroups(VkInstance instance, ref uint pPhysicalDeviceGroupCount, VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties)
		{
			fixed (uint* ppPhysicalDeviceGroupCount0 = &pPhysicalDeviceGroupCount)
			{
				VkResult ret = EnumeratePhysicalDeviceGroupsNative(instance, ppPhysicalDeviceGroupCount0, pPhysicalDeviceGroupProperties);
				return ret;
			}
		}

		public VkResult EnumeratePhysicalDeviceGroups(VkInstance instance, uint* pPhysicalDeviceGroupCount, Span<VkPhysicalDeviceGroupProperties> pPhysicalDeviceGroupProperties)
		{
			fixed (VkPhysicalDeviceGroupProperties* ppPhysicalDeviceGroupProperties0 = pPhysicalDeviceGroupProperties)
			{
				VkResult ret = EnumeratePhysicalDeviceGroupsNative(instance, pPhysicalDeviceGroupCount, ppPhysicalDeviceGroupProperties0);
				return ret;
			}
		}

		public VkResult EnumeratePhysicalDeviceGroups(VkInstance instance, uint* pPhysicalDeviceGroupCount, ref VkPhysicalDeviceGroupProperties pPhysicalDeviceGroupProperties)
		{
			fixed (VkPhysicalDeviceGroupProperties* ppPhysicalDeviceGroupProperties0 = &pPhysicalDeviceGroupProperties)
			{
				VkResult ret = EnumeratePhysicalDeviceGroupsNative(instance, pPhysicalDeviceGroupCount, ppPhysicalDeviceGroupProperties0);
				return ret;
			}
		}

		public VkResult EnumeratePhysicalDeviceGroups(VkInstance instance, Span<uint> pPhysicalDeviceGroupCount, Span<VkPhysicalDeviceGroupProperties> pPhysicalDeviceGroupProperties)
		{
			fixed (uint* ppPhysicalDeviceGroupCount0 = pPhysicalDeviceGroupCount)
			{
				fixed (VkPhysicalDeviceGroupProperties* ppPhysicalDeviceGroupProperties1 = pPhysicalDeviceGroupProperties)
				{
					VkResult ret = EnumeratePhysicalDeviceGroupsNative(instance, ppPhysicalDeviceGroupCount0, ppPhysicalDeviceGroupProperties1);
					return ret;
				}
			}
		}

		public VkResult EnumeratePhysicalDeviceGroups(VkInstance instance, ref uint pPhysicalDeviceGroupCount, ref VkPhysicalDeviceGroupProperties pPhysicalDeviceGroupProperties)
		{
			fixed (uint* ppPhysicalDeviceGroupCount0 = &pPhysicalDeviceGroupCount)
			{
				fixed (VkPhysicalDeviceGroupProperties* ppPhysicalDeviceGroupProperties1 = &pPhysicalDeviceGroupProperties)
				{
					VkResult ret = EnumeratePhysicalDeviceGroupsNative(instance, ppPhysicalDeviceGroupCount0, ppPhysicalDeviceGroupProperties1);
					return ret;
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal VkResult GetPhysicalDeviceToolPropertiesNative(VkPhysicalDevice physicalDevice, uint* pToolCount, VkPhysicalDeviceToolProperties* pToolProperties)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<VkPhysicalDevice, uint*, VkPhysicalDeviceToolProperties*, VkResult>)funcTable[22])(physicalDevice, pToolCount, pToolProperties);
			#else
			return (VkResult)((delegate* unmanaged[Cdecl]<VkPhysicalDevice, nint, nint, VkResult>)funcTable[22])(physicalDevice, (nint)pToolCount, (nint)pToolProperties);
			#endif
		}

		public VkResult GetPhysicalDeviceToolProperties(VkPhysicalDevice physicalDevice, uint* pToolCount, VkPhysicalDeviceToolProperties* pToolProperties)
		{
			VkResult ret = GetPhysicalDeviceToolPropertiesNative(physicalDevice, pToolCount, pToolProperties);
			return ret;
		}

		public VkResult GetPhysicalDeviceToolProperties(VkPhysicalDevice physicalDevice, Span<uint> pToolCount, VkPhysicalDeviceToolProperties* pToolProperties)
		{
			fixed (uint* ppToolCount0 = pToolCount)
			{
				VkResult ret = GetPhysicalDeviceToolPropertiesNative(physicalDevice, ppToolCount0, pToolProperties);
				return ret;
			}
		}

		public VkResult GetPhysicalDeviceToolProperties(VkPhysicalDevice physicalDevice, ref uint pToolCount, VkPhysicalDeviceToolProperties* pToolProperties)
		{
			fixed (uint* ppToolCount0 = &pToolCount)
			{
				VkResult ret = GetPhysicalDeviceToolPropertiesNative(physicalDevice, ppToolCount0, pToolProperties);
				return ret;
			}
		}

		public VkResult GetPhysicalDeviceToolProperties(VkPhysicalDevice physicalDevice, uint* pToolCount, Span<VkPhysicalDeviceToolProperties> pToolProperties)
		{
			fixed (VkPhysicalDeviceToolProperties* ppToolProperties0 = pToolProperties)
			{
				VkResult ret = GetPhysicalDeviceToolPropertiesNative(physicalDevice, pToolCount, ppToolProperties0);
				return ret;
			}
		}

		public VkResult GetPhysicalDeviceToolProperties(VkPhysicalDevice physicalDevice, uint* pToolCount, ref VkPhysicalDeviceToolProperties pToolProperties)
		{
			fixed (VkPhysicalDeviceToolProperties* ppToolProperties0 = &pToolProperties)
			{
				VkResult ret = GetPhysicalDeviceToolPropertiesNative(physicalDevice, pToolCount, ppToolProperties0);
				return ret;
			}
		}

		public VkResult GetPhysicalDeviceToolProperties(VkPhysicalDevice physicalDevice, Span<uint> pToolCount, Span<VkPhysicalDeviceToolProperties> pToolProperties)
		{
			fixed (uint* ppToolCount0 = pToolCount)
			{
				fixed (VkPhysicalDeviceToolProperties* ppToolProperties1 = pToolProperties)
				{
					VkResult ret = GetPhysicalDeviceToolPropertiesNative(physicalDevice, ppToolCount0, ppToolProperties1);
					return ret;
				}
			}
		}

		public VkResult GetPhysicalDeviceToolProperties(VkPhysicalDevice physicalDevice, ref uint pToolCount, ref VkPhysicalDeviceToolProperties pToolProperties)
		{
			fixed (uint* ppToolCount0 = &pToolCount)
			{
				fixed (VkPhysicalDeviceToolProperties* ppToolProperties1 = &pToolProperties)
				{
					VkResult ret = GetPhysicalDeviceToolPropertiesNative(physicalDevice, ppToolCount0, ppToolProperties1);
					return ret;
				}
			}
		}

	}
}
